//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "message_attachment")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub message: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub file: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::file::Entity",
        from = "Column::File",
        to = "super::file::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    File,
    #[sea_orm(
        belongs_to = "super::message::Entity",
        from = "Column::Message",
        to = "super::message::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Message,
}

impl Related<super::file::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::File.def()
    }
}

impl Related<super::message::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Message.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
